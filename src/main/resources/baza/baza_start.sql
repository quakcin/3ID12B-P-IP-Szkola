DELETE FROM Lekcja;
DELETE FROM NauczycielPrzedmiot;
DELETE FROM Uczen;
DELETE FROM Nauczyciel;
DELETE FROM Konto;
DELETE FROM Przedmiot;
DELETE FROM Klasa;
DELETE FROM Sesja;
DELETE FROM Sekretarka;

DROP TABLE Lekcja;
DROP TABLE NauczycielPrzedmiot;
DROP TABLE Uczen;
DROP TABLE Nauczyciel;
DROP TABLE Sesja;
DROP TABLE Konto;
DROP TABLE Przedmiot;
DROP TABLE Klasa;
DROP TABLE Sekretarka;


CREATE TABLE Konto (
    Nickname NVARCHAR2(32) NOT NULL,
    Haslo NVARCHAR2(256) NOT NULL,
    Typ NUMBER NOT NULL,
    Id NVARCHAR2(36) NOT NULL
);


CREATE TABLE Nauczyciel (
    Id NVARCHAR2(36),
    Imie NVARCHAR2(32) NOT NULL,
    Nazwisko NVARCHAR2(32) NOT NULL,
    DataZatrudnienia DATE DEFAULT sysdate,
    StopienZawodowy NVARCHAR2(16),
    KlasaId NVARCHAR2(3) DEFAULT 'Bez',
    CONSTRAINT Nauczyciel_pk PRIMARY KEY (Id)
);

CREATE TABLE Sekretarka (
    Id NVARCHAR2(36),
    Imie NVARCHAR2(32) NOT NULL,
    Nazwisko NVARCHAR2(32) NOT NULL,
    CONSTRAINT Sekretarka_pk PRIMARY KEY (Id)
);

CREATE TABLE Sesja (
    Token NVARCHAR2(64) NOT NULL,
    Expr TIMESTAMP NOT NULL,
    Id NVARCHAR2(36) NOT NULL,
    Typ NUMBER NOT NULL
);

CREATE TABLE Klasa (
    Nazwa NVARCHAR2(3) NOT NULL,
    Poziom NUMBER NOT NULL,
    CONSTRAINT Klasa_pk PRIMARY KEY (Nazwa)
);

CREATE TABLE Uczen (
    Id NVARCHAR2(36),
    Numer INT DEFAULT 0,
    Imie NVARCHAR2(32) NOT NULL,
    Nazwisko NVARCHAR2(32) NOT NULL,
    PESEL CHAR(11) NOT NULL,
    DataUrodzenia DATE NOT NULL,
    Miejsceurodzenia NVARCHAR2(32) NOT NULL,
    Klasa NVARCHAR2(3) DEFAULT '0',
    CONSTRAINT Uczen_pk PRIMARY KEY (Id),
    CONSTRAINT Klasa_fk FOREIGN KEY (Klasa) REFERENCES Klasa(Nazwa)
);

CREATE TABLE Przedmiot (
    Id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    Nazwa NVARCHAR2(32) NOT NULL,
    Poziom NUMBER,
    Ilosc NUMBER,
    Obowiazkowy CHAR(1) DEFAULT 'T',
    CONSTRAINT Przedmiot_pk PRIMARY KEY (Id)
);

CREATE TABLE NauczycielPrzedmiot (
     nauczycielId NVARCHAR2(36),
     przedmiotId NUMBER,
     CONSTRAINT Przedmiot_fk FOREIGN KEY (przedmiotId) REFERENCES Przedmiot(Id) ON DELETE CASCADE,
     CONSTRAINT Nauczyciel_fk FOREIGN KEY (nauczycielId) REFERENCES Nauczyciel(Id) ON DELETE CASCADE,
     CONSTRAINT Nauczyciel_Przedmiot_pk PRIMARY KEY (nauczycielId, przedmiotId)
);

CREATE TABLE Lekcja (
    Id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    DzienTygodnia NUMBER NOT NULL,
    Godzina NUMBER NOT NULL,
    KlasaId NVARCHAR2(3) NOT NULL,
    PrzedmiotId NUMBER NOT NULL,
    NauczycielId NVARCHAR2(36) NOT NULL,
    CONSTRAINT Lekcja_pk PRIMARY KEY (Id),
    CONSTRAINT Lekcja_Klasa_fk FOREIGN KEY (KlasaId) REFERENCES Klasa(Nazwa) ON DELETE CASCADE,
    CONSTRAINT Lekcja_Przedmiot_fk FOREIGN KEY (PrzedmiotId) REFERENCES Przedmiot(Id) ON DELETE CASCADE,
    CONSTRAINT Lekcja_Nauczyciel_fk FOREIGN KEY (NauczycielId) REFERENCES Nauczyciel(Id) ON DELETE CASCADE
);

CREATE TABLE Ocena(
    Id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    Stopien NVARCHAR2(3) NOT NULL,
    Waga NUMBER NOT NULL,
    UczenId NVARCHAR2(36) NOT NULL,
    PrzedmiotId NUMBER NOT NULL,
    NauczycielId NVARCHAR2(36) NOT NULL,
    Data DATE NOT NULL,
    CONSTRAINT Ocena_pk PRIMARY KEY (Id),
    CONSTRAINT Ocana_Uczen_fk FOREIGN KEY (UczenId) REFERENCES Uczen(Id) ON DELETE CASCADE,
    CONSTRAINT Ocana_Przedmiot_fk FOREIGN KEY (PrzedmiotId) REFERENCES Przedmiot(Id) ON DELETE CASCADE,
    CONSTRAINT Ocana_Nauczyciel_fk FOREIGN KEY (NauczycielId) REFERENCES Nauczyciel(Id) ON DELETE CASCADE
);


CREATE OR REPLACE VIEW NauczycieleView AS
SELECT
    Nauczyciel.Id AS NauczycielId, Nauczyciel.Imie, Nauczyciel.Nazwisko, Nauczyciel.DataZatrudnienia,
    Nauczyciel.StopienZawodowy, LISTAGG(CONCAT(CONCAT(CONCAT(Przedmiot.Nazwa,' - Klasa '),Przedmiot.Poziom), ', ')) WITHIN GROUP (ORDER BY Przedmiot.Nazwa, Przedmiot.Poziom)  AS Przedmioty, Nauczyciel.KlasaId
FROM Nauczyciel
         LEFT JOIN NauczycielPrzedmiot ON Nauczyciel.Id = NauczycielPrzedmiot.NauczycielId
         LEFT JOIN Przedmiot ON Przedmiot.Id = NauczycielPrzedmiot.PrzedmiotId
GROUP BY Nauczyciel.Id, Nauczyciel.Imie, Nauczyciel.Nazwisko, Nauczyciel.DataZatrudnienia, Nauczyciel.StopienZawodowy, Nauczyciel.KlasaId
ORDER BY Nauczyciel.Nazwisko, Nauczyciel.Imie;

CREATE OR REPLACE VIEW KlasyView AS
SELECT Klasa.Nazwa, Klasa.Poziom, COUNT(Uczen.Id) LiczbaUczniow, CONCAT(CONCAT(Nauczyciel.imie, ' '), Nauczyciel.nazwisko) AS Wychowawca
FROM Klasa
         LEFT JOIN Nauczyciel ON Nauczyciel.KlasaId = Klasa.Nazwa
         INNER JOIN Uczen ON Uczen.Klasa = Klasa.Nazwa
GROUP BY Klasa.Nazwa, Klasa.Poziom, CONCAT(CONCAT(Nauczyciel.imie, ' '), Nauczyciel.nazwisko)
ORDER BY Klasa.Nazwa, Klasa.Poziom;

CREATE OR REPLACE VIEW NauczycielUczy AS
SELECT * FROM Nauczyciel
    INNER JOIN NauczycielPrzedmiot ON NauczycielPrzedmiot.NauczycielId = Nauczyciel.Id;

CREATE OR REPLACE VIEW NauczycielLekcje AS
SELECT DISTINCT Nauczyciel.Id, Przedmiot.Nazwa, lekcja.klasaid FROM Nauczyciel
    INNER JOIN Lekcja ON Lekcja.NauczycielId = Nauczyciel.Id
    INNER JOIN Przedmiot ON Przedmiot.Id = Lekcja.przedmiotId
ORDER BY Lekcja.klasaId, Przedmiot.Nazwa;

INSERT INTO Klasa VALUES ('0', 0);
INSERT INTO Konto VALUES ('Dyrektor', '1234', 3, 'Djeden');